#
# This file may be used for chord_fuse executable
# the monitor flag as well as the shutdown handler
# are disabled since fuse will notify chord about
# filesystem changes - otherwise the monitor will
# race with fuse.
#
version: 1

##shutdown handler
register_shutdown_handler: No

##data
# enable fswatch to watch changes within data-directory
monitor: No
# directory where the data is stored
data-directory: "/tmp/data0"
# directory where the metadata is stored (rocksdb)
meta-directory: "/tmp/meta0"

##networking
# advertise address to cluster members
bind-addr: "0.0.0.0:50050"
# join the cluster using this member
join-addr: "0.0.0.0:50051"
# bootstrap a new cluster if none is detected
bootstrap: Yes
# let a client send commands that will be executed on this node
no-controller: No

##details
# stabilize the ring every (ms)
stabilize_ms: 10000
# check the ring every (ms)
check_ms: 10000

##replication / striping
# default replication value, -1 will result in every
# node downloading every file for 'offline' use (c.f. dropbox)
replication-count: -1
# the responsible node and its next 2 successors will hold the file
# and its metadata including the metadata of the parent directory
#replication-count: 3

##uuid
# the uuid (number) of the node in the chord ring
# in the range [0, 2^m) with m being 256 for equal
# distribution the uuids within the ring should be 
# evenly distributed
uuid: "0"

##logging
# the configuration of the logger, every class should
# have its own logger(-name) which is matched against
# the filter-regex 
logging:
  level: trace
  sinks:
    CONSOLE_SINK:
      type: "console"
    FILE_SINK:
      type: "file-rotating"
      path: "/tmp/chord_fuse.log"
  loggers:
    CHORD_LOG:
      sinks: [FILE_SINK]
      filter: "^chord[.](?!fs)"
    CHORD_FS_LOG:
      sinks: [CONSOLE_SINK]
      filter: "^chord[.]fs"
      level: trace
