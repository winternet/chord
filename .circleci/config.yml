version: 2
jobs:
  build:
    docker:
      - image: ubuntu:17.04
    steps:
      - checkout
      - run:
          name: Setup
          command: |
            apt-get update
            apt-get -y install build-essential autoconf libtool git curl cmake unzip software-properties-common wget
            add-apt-repository -y ppa:ubuntu-toolchain-r/test
            add-apt-repository "deb http://apt.llvm.org/zesty/ llvm-toolchain-zesty-5.0 main"
            wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            apt-get update
            export WORKINGDIR="$(pwd)"
            echo "working dir: $WORKINGDIR"
            export DEPS="$(pwd)/deps"
            echo "dependency dir: $DEPS"
            mkdir -p $DEPS

      - run:
          name: Install clang
          command: |
            apt-get -y install clang-5.0 
            clang++-5.0 --version

      - run:
          name: Install gcc-7
          command: |
            apt-get -y install  gcc-7 g++-7
            g++ --version

      - run:
          name: Install xattr
          command: |
            apt-get -y install attr-dev

      - run:
          name: Install openssl
          command: |
            apt-get -y install openssl libssl-dev

      - run:
          name: Install boost
          command: |
            cd $DEPS
            git clone --depth 1 --recursive http://github.com/boostorg/boost.git boost || exit 1
            (cd boost && ./bootstrap.sh --with-libraries=log,thread,system,program_options && ./b2 link=shared install) || exit 1
	    ldconfig

      - run:
          name: Install grpc
          command: |
            cd $DEPS
            git clone -b v1.6.6 https://github.com/grpc/grpc
            cd grpc
            git submodule update --init
            make
            make install
            ldconfig

      - run:
          name: Install protobuf
          command: |
            cd $DEPS
            git clone -b v3.0.2 https://github.com/google/protobuf.git protobuf
            cd protobuf
            ./autogen.sh
            ./configure
            make
            make install
            ldconfig
            protoc --version

      - run:
          name: Install chord
          command: |
            mkdir build
            cd build
            CXX=g++-7 CC=gcc-7 cmake ..
            cmake --build .
            ctest --V

